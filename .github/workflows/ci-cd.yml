name: Build, Test and Deploy Backend

# triggers for our workflow
on:
  # opening a pull request to master and develop branch will be a trigger
  pull_request:
    branches:
      - main
      - dev
  # any code pushed to master and develop branch will also be a trigger
  push:
    branches:
      - main
      - dev

jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python 3.10 environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Install build package
        run: python -m pip install build
      - name: Build distribution package
        run: pyproject-build
      - name: Storing artifacts for later use by another job
        uses: actions/upload-artifact@v3
        with:
          name: my-artifacts
          path: ./dist/*
  publish-job:
    runs-on: ubuntu-latest
    needs: [build-job] # will be fired if and only if build-job is passed                  
    steps:
        - name: Setup Python 3.10 environment
          uses: actions/setup-python@v3
          with:
            python-version: '3.10'
        - name: Check Python version # checking the python version to see if 3.x is installed.
          run: python --version
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            ref: main
        - name: Downloading artifacts stored earlier by another job
          uses: actions/download-artifact@v3
          id: download
          with:
            name: my-artifacts
            path: ./dist/
        - name: Echo download path
          run: echo ${{steps.download.outputs.download-path}}
        - name: Display structure of downloaded files
          run: ls -R
          working-directory: ./dist/
        - name: Publish package to TestPyPI (uses twine under the hood)
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}
            repository-url: https://test.pypi.org/legacy/
